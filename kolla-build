#!/usr/bin/env bash
DIR="$(cd "$(dirname "${BASH_SOURCE[0]}" >/dev/null 2>&1)" && pwd)"
VIRTUALENV="$(realpath ${VIRTUALENV:-$DIR/venv})"
FORCE_UPDATES="${FORCE_UPDATES:-no}"
CHECK_UPDATES=yes
KOLLA_LOCAL_SOURCES="${KOLLA_LOCAL_SOURCES:-no}"

if [[ ! -f "$VIRTUALENV/bin/activate" ]]; then
	if [[ "$(python -V | cut -d' ' -f2)" != "3."* ]]; then
		echo "Python 3.x is required."
		exit 1
	fi

  echo "Creating virtualenv at $VIRTUALENV ..."
  python -m venv "$VIRTUALENV" --system-site-packages
  "$VIRTUALENV/bin/pip" install --upgrade pip
  FORCE_UPDATES=yes
fi

source "$VIRTUALENV/bin/activate"

set -a; source "$DIR/.env"; set +a

# Automatically update dependencies
if [[ "$CHECK_UPDATES" == "yes" || "$FORCE_UPDATES" == "yes" ]]; then
  kolla_remote=https://github.com/chameleoncloud/kolla.git
  kolla_checkout=${KOLLA_BRANCH:-chameleoncloud/train}
  kolla_gitref="$VIRTUALENV/kolla.gitref"
  kolla_egglink="$VIRTUALENV/src/kolla"
  if [[ "$FORCE_UPDATES" == "yes" || ! -f "$kolla_gitref" || ! -d "$kolla_egglink" ]] || \
        ! diff -q >/dev/null \
          $kolla_gitref \
          <(cd $kolla_egglink; git fetch; git show-ref -s -d origin/$kolla_checkout); then
    pip install --upgrade --force-reinstall \
			-e git+$kolla_remote@$kolla_checkout#egg=kolla
    (cd $kolla_egglink; git rev-parse HEAD > $kolla_gitref)
  fi
fi

build_dir="$DIR/build"
source_dir="$DIR/sources"
profile_dir="$DIR/$KOLLA_BUILD_PROFILE"
sub_profile="${KOLLA_BUILD_SUBPROFILE:-$KOLLA_BUILD_PROFILE}"

# Create build directory with configuration specific to service
mkdir -p "$build_dir"
declare -a conf_files=(
	<(sed "s/OPENSTACK_BASE_RELEASE/$OPENSTACK_BASE_RELEASE/" "$DIR/kolla-build.conf.m4")
	"$profile_dir/kolla-build.conf"
)
if [[ "$KOLLA_LOCAL_SOURCES" == "yes" && -f "$profile_dir/kolla-build.local-sources.conf" ]]; then
	conf_files+=("$profile_dir/kolla-build.local-sources.conf")
fi
cat "${conf_files[@]}" 2>/dev/null >"$build_dir/kolla-build.conf"
cat "$DIR/kolla-template-overrides.j2" "$profile_dir/kolla-template-overrides.j2" \
	2>/dev/null >"$build_dir/kolla-template-overrides.j2"
if [[ -d "$profile_dir/additions" ]]; then
  mkdir -p "$source_dir"
	tar -cf "$source_dir/additions.tar" -C "$profile_dir/additions" .
fi

# Allow overriding default env
set -a;
if [[ -f "$profile_dir/.env" ]]; then
	source "$profile_dir/.env"
fi
if [[ -f "$profile_dir/$sub_profile.env" ]]; then
  source "$profile_dir/$sub_profile.env"
fi
set +a

pushd "$build_dir" >/dev/null

# Construct kolla-build command invocation
declare -a cmd=(
	$VIRTUALENV/src/kolla/tools/build.py \
		--work-dir="." --config-file="kolla-build.conf" --locals-base="../sources" \
		--template-override="kolla-template-overrides.j2" \
		--type="$KOLLA_INSTALL_TYPE" \
		--base="$KOLLA_BASE" --base-tag="$KOLLA_BASE_TAG" --base-arch="$KOLLA_BASE_ARCH" \
		--registry="${DOCKER_REGISTRY:-}" --namespace="${KOLLA_NAMESPACE:-}" \
		--tag="$DOCKER_TAG" \
		--profile="$sub_profile"
)

if [[ -n "$PARENT_DOCKER_TAG" ]]; then
	cmd+=(--parent-tag="$PARENT_DOCKER_TAG")
fi

cmd+=("$@")

cat <<EOF
================================================================================
Build profile:     $KOLLA_BUILD_PROFILE
Install type:      $KOLLA_INSTALL_TYPE
OpenStack release: $OPENSTACK_BASE_RELEASE
Kolla branch:      $KOLLA_BRANCH
Kolla build flags: $KOLLA_FLAGS
Docker tag:        $DOCKER_TAG
Parent Docker tag: $PARENT_DOCKER_TAG

Command:

$(fold -w80 -s <<<"${cmd[@]}")
================================================================================
EOF

"${cmd[@]}"
