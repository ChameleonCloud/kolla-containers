#!/usr/bin/env bash
set -u

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}" >/dev/null 2>&1)" && pwd)"
set -a; source "$DIR/.env"; set +a

mkdir -p "$DIR/build"

build_dir="$DIR/build"
source_dir="$DIR/sources"
profile_dir="$DIR/$KOLLA_BUILD_PROFILE"
python_bin="$DIR/kolla/.tox/$PYTHON_VERSION/bin/python"

# Create build directory with configuration specific to service
mkdir -p "$build_dir"
cat "$DIR/kolla-build.conf" "$profile_dir/kolla-build.conf" 2>/dev/null >"$build_dir/kolla-build.conf"
cat "$DIR/kolla-template-overrides.j2" "$profile_dir/kolla-template-overrides.j2" 2>/dev/null >"$build_dir/kolla-template-overrides.j2"
if [[ -d "$profile_dir/additions" ]]; then
  mkdir -p "$source_dir"
	cp -rf "$profile_dir/additions" "$source_dir/additions"
fi
# Allow overriding default env
if [[ -f "$profile_dir/.env" ]]; then
	set -a; source "$profile_dir/.env"; set +a
fi

pushd "$DIR/kolla" >/dev/null
cleanup() {
	popd >/dev/null
}
trap cleanup EXIT

$python_bin tools/build.py \
  --config-file="$build_dir/kolla-build.conf" --locals-base="$source_dir" \
	--template-override="$build_dir/kolla-template-overrides.j2" \
	--type="$KOLLA_INSTALL_TYPE" \
	--base="$KOLLA_BASE" --base-tag="$KOLLA_BASE_TAG" --base-arch="$KOLLA_BASE_ARCH" \
	--registry="${DOCKER_REGISTRY:-}" --namespace="${KOLLA_NAMESPACE:-}" \
	--tag="$DOCKER_TAG" \
	--profile="$KOLLA_BUILD_PROFILE" \
	"$@"
