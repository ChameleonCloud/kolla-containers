#!/usr/bin/env bash
set -e -u -o pipefail

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}" >/dev/null 2>&1)" && pwd)"
source <(sed -e '/^$/d' -e 's/^/export /g' "${DIR}/.env")

service_name="${1:-}"
kolla_work="${DIR}/kolla_work"
python_bin="${DIR}/kolla/.tox/${PYTHON_VERSION}/bin/python"

if [[ -z "$service_name" ]]; then
	echo "usage"
fi

# Copy .dockerignore to build context.
# Why Kolla doesn't use this feature of Docker, I don't know.
mkdir -p "$kolla_work/docker/$service_name"
cp "$kolla_work/.dockerignore" "$kolla_work/docker/$service_name/"

pushd "${DIR}/kolla"
cleanup() {
	popd
}
trap cleanup EXIT

$python_bin tools/build.py \
	--work-dir="$kolla_work" \
	--config-file="${DIR}/kolla-build.conf" \
	--template-override="${DIR}/kolla-template-overrides.j2" \
	--type="${KOLLA_INSTALL_TYPE}" \
	--base="${KOLLA_BASE}" --base-tag="${KOLLA_BASE_TAG}" --base-arch="${KOLLA_BASE_ARCH}" \
	--registry="${DOCKER_REGISTRY}" --namespace="${KOLLA_NAMESPACE}" \
	--skip-existing \
	--tag="${VERSION}"
