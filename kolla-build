#!/usr/bin/env bash
set -u 

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}" >/dev/null 2>&1)" && pwd)"
source <(sed -e '/^$/d' -e 's/^/export /g' "$DIR/.env")

mkdir -p "$DIR/build"

all_services="$(git ls-files | xargs -n1 dirname | sort | uniq | sed '/\./d')"
service_name="${@: -1}"

if [[ "$all_services" != *"$service_name"* ]]; then
    echo "Could not parse service name from arguments."
    service_name="missing"
fi

build_dir="$DIR/build"
python_bin="$DIR/kolla/.tox/$PYTHON_VERSION/bin/python"

# Create build directory with configuration specific to service
mkdir -p "$build_dir"
cat "$DIR/kolla-build.conf" "$DIR/$service_name/kolla-build.conf" 2>/dev/null >"$build_dir/kolla-build.conf"
cat "$DIR/kolla-template-overrides.j2" "$DIR/$service_name/kolla-template-overrides.j2" 2>/dev/null >"$build_dir/kolla-template-overrides.j2"

pushd "$DIR/kolla" >/dev/null
cleanup() {
	popd >/dev/null
}
trap cleanup EXIT

$python_bin tools/build.py \
  --config-dir="$build_dir" \
	--template-override="$build_dir/kolla-template-overrides.j2" \
	--type="$KOLLA_INSTALL_TYPE" \
	--base="$KOLLA_BASE" --base-tag="$KOLLA_BASE_TAG" --base-arch="$KOLLA_BASE_ARCH" \
	--registry="$DOCKER_REGISTRY" --namespace="$KOLLA_NAMESPACE" \
	--skip-existing \
	--tag="$VERSION" \
	"$@"
