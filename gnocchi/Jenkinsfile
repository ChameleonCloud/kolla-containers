pipeline {
  agent any

  parameters {
    string(name: 'DOCKER_TAG', defaultValue: 'train',
           description: 'Tag to apply to built docker image')
  }

  triggers {
    upstream(upstreamProjects: "base-kolla/${env.BRANCH_NAME}",
             threshold: hudson.model.Result.SUCCESS)
  }

  environment {
    // Necessary so that `docker login` credentials are not put in shared location
    HOME = "${env.WORKSPACE}"
    DOCKER_REGISTRY = 'docker.chameleoncloud.org'
    DOCKER_REGISTRY_CREDS = credentials('kolla-docker-registry-creds')
  }

  stages {
    stage('docker-setup') {
      steps {
        sh 'docker login --username=$DOCKER_REGISTRY_CREDS_USR --password=$DOCKER_REGISTRY_CREDS_PSW $DOCKER_REGISTRY'
      }
    }

    stage('build-and-publish') {
      environment {
        KOLLA_BUILD_PROFILE = 'gnocchi'
        KOLLA_PUSH = 'yes'
      }

      steps {
        withPythonEnv('python3') {
          sh 'make build'
        }
      }
    }
  }

  post {
    always {
      sh 'docker logout $DOCKER_REGISTRY'
    }

    failure {
      slackSend(
        channel: "#notifications",
        message: "*Build* of *gnocchi* (${env.DOCKER_TAG}) failed. <${env.RUN_DISPLAY_URL}|View build log>",
        color: "danger"
      )
    }

    success {
      slackSend(
        channel: "#notifications",
        message: "*Build* of *gnocchi* (${env.DOCKER_TAG}) completed successfuly. <${env.RUN_DISPLAY_URL}|View build log>",
        color: "good"
      )
      build job: 'kolla-ansible-deploy', wait: false, parameters: [
        string(name: 'KOLLA_SERVICE_NAME', value: 'gnocchi'),
        string(name: 'JENKINS_AGENT_LABEL', value: 'ansible-uc-dev')
      ]
    }
  }

}
