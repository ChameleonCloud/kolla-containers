pipeline {
  agent any

  parameters {
    string(name: 'HORIZON_THEME_JOB_NAME', defaultValue: 'horizon-theme/master',
           description: 'Jenkins job name for horizon-theme dependency')
    string(name: 'DOCKER_TAG', defaultValue: 'train',
           description: 'Tag to apply to built docker image')
  }


  triggers {
    upstream(upstreamProjects: "${params.HORIZON_THEME_JOB_NAME}",
             threshold: hudson.model.Result.SUCCESS)
  }

  environment {
    // Necessary so that `docker login` credentials are not put in shared location
    HOME = "${env.WORKSPACE}"
    DOCKER_REGISTRY_CREDS = credentials('docker-hub')
  }

  stages {
    stage('docker-setup') {
      steps {
        sh 'docker login --username=$DOCKER_REGISTRY_CREDS_USR --password=$DOCKER_REGISTRY_CREDS_PSW'
      }
    }

    stage('build-and-publish') {
      environment {
        KOLLA_BUILD_PROFILE = 'horizon_kvm'
        KOLLA_PUSH = 'yes'
      }

      steps {
        copyArtifacts(projectName: "${params.HORIZON_THEME_JOB_NAME}",
                      target: "${env.WORKSPACE}/sources")
        sh "make clean"
        sh "make build-with-locals"
      }
    }
  }

  // The post section contains tasks to run after the pipeline succeeds or fails.
  // We log out of the Docker registry to clean up credentials cached on disk.
  post {
    always {
      sh 'docker logout'
    }

    failure {
      slackSend(
        channel: "#notifications",
        message: "*Build* of *horizon-kvm* (${env.DOCKER_TAG}) failed. <${env.RUN_DISPLAY_URL}|View build log>",
        color: "danger"
      )
    }

    success {
      slackSend(
        channel: "#notifications",
        message: "*Build* of *horizon-kvm* (${env.DOCKER_TAG}) completed successfuly. <${env.RUN_DISPLAY_URL}|View build log>",
        color: "good"
      )
    }
  }
}
